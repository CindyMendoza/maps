{
  "title": "learn anything - computer science",
  "tag": "",
  "id": 353,
  "map": {
    "text": "computer science",
    "nodes": [
      {
        "text": "basics",
        "note": "",
        "nodes": [
          {
            "text": "algorithms  ️",
            "note": "is an effective method that can be expressed within a finite amount of space and time and in a well defined formal language for calculating a function  starting from an initial state and initial input (perhaps empty), the instructions describe a computation that, when executed, proceeds through a finite number of well defined successive steps, eventually producing ‘output’ and terminating at a final ending state  they are essential to the way computers process data  they can be expressed in many kinds of notation, including  - natural languages - pseudocode - flowcharts - drakon-charts - programming languages - control tables  most algorithms are intended to be implemented as computer programs  however some are implemented as a biological neural network (for example, the human brain implementing arithmetic or an insect looking for food), in an electrical circuit, or in a mechanical device",
            "nodes": [],
            "resources": [
              {
                "url": "/computer-science/algorithms",
                "text": "algorithms  ️",
                "category": "mindmap",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "programming language theory  ️",
            "nodes": [],
            "resources": [
              {
                "url": "/computer-science/programming-language-theory",
                "text": "programming language theory  ️",
                "category": "mindmap",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "data structures  ️",
            "note": "is a particular way of organising data in a computer so that it can be used efficiently  can implement one or more particular abstract data types (ADT), which specify the operations that can be performed on a data structure and the computational complexity of those operations  a data structure is a concrete implementation of the specification provided by an ADT  are generally based on the ability of a computer to fetch and store data at any place ints its memory, specified by a pointer (a bit string, representing a memory address), that can be itself stored in memory and manipulated by the program  implementation of a data structure usually requires writing a set of procedures that create and manipulate instances of that structure",
            "nodes": [],
            "resources": [
              {
                "url": "/computer-science/data-structures",
                "text": "data structures  ️",
                "category": "mindmap",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "compilers  ️",
            "note": "are computer programs (or a set of programs) that transform source code written in a programming language (the source language) into another computer language (the target language), with the latter often having a binary form known as object code",
            "nodes": [],
            "resources": [
              {
                "url": "/computer-science/compilers",
                "text": "compilers  ️",
                "category": "mindmap",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "virtual machines  ️",
            "nodes": [],
            "resources": [
              {
                "url": "/computer-science/virtual-machines",
                "text": "virtual machines  ️",
                "category": "mindmap",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "computation  ️",
            "note": "computation is any type of calculation that follows a well-defined model understood and expressed as, for example, an algorithm",
            "nodes": [],
            "resources": [
              {
                "url": "/computer-science/computation",
                "text": "computation  ️",
                "category": "mindmap",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "concurrency  ️",
            "note": "is the decomposability property of a program, algorithm or problem into order-independent or partially-ordered components or units  this means that even if the concurrent units of the program, algorithm, or problem are executed out-of-order or in partial order, the final outcome will remain the same  this allows for parallel execution of the concurrent units  design of concurrent systems often entails finding reliable techniques for coordinating their execution, data exchange, memory allocation and execution scheduling to minimise response time and maxima throughput",
            "nodes": [],
            "resources": [
              {
                "url": "/computer-science/concurrency",
                "text": "concurrency  ️",
                "category": "mindmap",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "recursion  ️",
            "nodes": [],
            "resources": [
              {
                "url": "/computer-science/recursion",
                "text": "recursion  ️",
                "category": "mindmap",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "program analysis  ️",
            "nodes": [],
            "resources": [
              {
                "url": "/computer-science/program-analysis",
                "text": "program analysis  ️",
                "category": "mindmap",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "automata theory  ️",
            "nodes": [],
            "resources": [
              {
                "url": "/computer-science/automata-theory",
                "text": "automata theory  ️",
                "category": "mindmap",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          }
        ],
        "resources": [
          {
            "url": "https://www.youtube.com/watch?v=SzJ46YA_RaA",
            "text": "1. map of computer science",
            "category": "video",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "https://bobcarp.files.wordpress.com/2014/07/code-charles-petzold.pdf",
            "text": "1. code: hidden language",
            "category": "free book",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "https://cs50.harvard.edu/weeks",
            "text": "1. CS50 from Harvard",
            "category": "course",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "http://sarabander.github.io/sicp/html/index.xhtml",
            "text": "2. structure and interpretation of computer programs",
            "category": "free book",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "https://www.youtube.com/watch?v=tpIctyqH29Q&amp;list=PL8dPuuaLjXtNlUrzyH5r6jN9ulIgZBpdo",
            "text": "2. crash course computer science",
            "category": "video",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "https://www.coursera.org/learn/build-a-computer",
            "text": "3. build a computer from first principles",
            "category": "course",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "https://courses.csail.mit.edu/6.042/spring17/mcs.pdf",
            "text": "3. mathematics for computer science",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          }
        ],
        "author": ""
      },
      {
        "text": "help",
        "nodes": [
          {
            "text": "articles",
            "nodes": [],
            "resources": [
              {
                "url": "http://matt.might.net/articles/what-cs-majors-should-know/",
                "text": "what every cs major should know  ️",
                "category": "article",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              },
              {
                "url": "https://teachyourselfcs.com/",
                "text": "17: teach yourself computer science  ️",
                "category": "article",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          }
        ],
        "resources": [
          {
            "url": "http://www.computersciencestudent.com/",
            "text": "cs student resources",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "https://fkcd.ca/b7d.svg",
            "text": "cs concept map",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "https://github.com/nushackers/notes-to-cs-freshmen-from-the-future",
            "text": "notes to cs freshmen from the future",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "https://github.com/papers-we-love/papers-we-love",
            "text": "papers we love",
            "category": "github",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          }
        ],
        "author": ""
      }
    ],
    "resources": [
      {
        "url": "https://cs.stackexchange.com/",
        "text": "️",
        "category": "stack exchange",
        "note": "",
        "author": "",
        "score": {
          "up": 0,
          "down": 0
        }
      },
      {
        "url": "https://www.reddit.com/r/compsci/",
        "text": "",
        "category": "reddit",
        "note": "",
        "author": "",
        "score": {
          "up": 0,
          "down": 0
        }
      },
      {
        "url": "https://www.reddit.com/r/AskComputerScience/",
        "text": "ask cs",
        "category": "reddit",
        "note": "",
        "author": "",
        "score": {
          "up": 0,
          "down": 0
        }
      },
      {
        "url": "https://github.com/open-source-society/computer-science",
        "text": "awesome",
        "category": "github",
        "note": "",
        "author": "",
        "score": {
          "up": 0,
          "down": 0
        }
      },
      {
        "url": "http://www.wikiwand.com/en/Computer_science",
        "text": "computer science",
        "category": "wiki",
        "note": "",
        "author": "",
        "score": {
          "up": 0,
          "down": 0
        }
      }
    ],
    "author": ""
  }
}